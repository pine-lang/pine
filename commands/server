#!/usr/bin/env bash
. "$WORKDIR/common"

cd $WORKDIR

CONFIG="${CONFIG:-default}"

decrypt_config() {
    mcrypt -d "$1"
}

CONFIG_FILE="$CONFIG_DIR/$CONFIG"
TMP_FILE="$TMP_DIR/$CONFIG"

if [ ! -f "$CONFIG_DIR/$CONFIG" ]; then
    echo "Config file not found!"
    exit 1
fi

mkdir -p $TMP_DIR
cp $CONFIG_FILE $TMP_FILE

# Check if the encrypted configuration file exists
if  [[ "$TMP_FILE" == *.nc ]]; then
    # TODO: get the decypted file name here !!
    echo
    echo Decrypting config file: $TMP_FILE
    decrypt_config $TMP_FILE
    TMP_FILE="${TMP_FILE%.nc}"
fi

# Source and cleanup
. $TMP_FILE
rm $TMP_FILE*

# Prompt the user with all the settings
echo
echo "Configuration from '$TMP_FILE'"
echo
echo "  Database Host     : $DB_HOST "
echo "  Database Name     : $DB_NAME "
echo "  Database User     : $DB_USER "
echo "  Database Password : xxx"
echo

# Prompt the user to continue
read -n 1 -s -r -p "Continue?"
echo

# Export the variables
export DB_HOST
export DB_NAME
export DB_USER
export DB_PASSWORD

echo
echo
echo 'Starting pine...'
echo
echo 'Once ready, go to https://try.pine-lang.org to start using it.'
echo
echo

if [ "$1" == "--dev" ]; then
    cli_log "Running in dev mode"
    cd pine-lang
    ./server.sh
else
    docker compose up --force-recreate --remove-orphans
fi

